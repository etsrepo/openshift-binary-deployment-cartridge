#!/bin/env oo-ruby

require 'optparse'
require 'ostruct'
require_relative '../lib/util.rb'

options = OpenStruct.new
options.dry_run = false
options.gear_list = nil

opt_parser = OptionParser.new do |opts|
  opts.on("-g", "--gear-list GEARLIST", "Path to file containing a list of gears") do |gear_list|
    options.gear_list = gear_list
  end
  
  opts.on("-n", "--dry-run", "Dry run - don't perform any changes") do |b|
    options.dry_run = b
  end
end

opt_parser.parse!(ARGV)

if options.gear_list
  targets = File.readlines(options.gear_list).map(&:chomp)
else
  targets = read_gear_registry
end

ok = []
bad = []

output = parallel(targets) do |gear|
  if options.dry_run
    gear.run "$OPENSHIFT_BINARYDEPLOY_DIR/usr/child/bin/can_rollback"
    if $?.success?
      ok << gear.id
    else
      bad << gear.id
    end
  else
    gear.run "$OPENSHIFT_BINARYDEPLOY_DIR/usr/child/bin/rollback 2>&1"
  end
end

if options.dry_run
  say $terminal.color "Gears that should rollback successfully:", :bold, :underline
  ok.each { |gear_id| say gear_id }
  say "\n"
  say $terminal.color "Gears that will not rollback successfully:", :bold, :underline
  bad.each { |gear_id| say gear_id }
else
  targets.each_with_index do |gear, index|
    say $terminal.color "Result from #{gear.id}:", :bold, :underline
    say output[index]
  end
end